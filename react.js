module.exports = {
  env: {
    browser: true,
    es6: true,
    node: true,
    jest: true,
  },
  extends: ['@profi.co/eslint-config/base', 'airbnb', 'prettier/react'],
  globals: {
    NodeJS: 'readonly',
    React: 'readonly',
    JSX: 'readonly',
  },
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
      modules: true,
    },
    ecmaVersion: 2020,
    sourceType: 'module',
  },
  plugins: ['react-hooks'],
  rules: {
    '@typescript-eslint/ban-ts-comment': ['off'],
    '@typescript-eslint/ban-ts-ignore': ['off'],
    '@typescript-eslint/camelcase': ['off'],
    '@typescript-eslint/explicit-function-return-type': ['warn'],
    '@typescript-eslint/explicit-module-boundary-types': ['off'],
    '@typescript-eslint/interface-name-prefix': ['off'],
    '@typescript-eslint/no-empty-function': ['off'],
    '@typescript-eslint/no-shadow': ['error'],
    '@typescript-eslint/no-unused-vars': ['warn'],
    '@typescript-eslint/no-use-before-define': ['error'],
    '@typescript-eslint/no-var-requires': ['off'],
    camelcase: ['off'],
    'class-methods-use-this': ['off'],
    curly: ['error'],
    'global-require': ['off'],
    'import/default': ['error'],
    'import/export': ['error'],
    'import/extensions': [
      'error',
      'ignorePackages',
      {
        js: 'never',
        jsx: 'never',
        ts: 'never',
        tsx: 'never',
      },
    ],
    'import/named': ['error'],
    'import/namespace': ['error'],
    'import/no-cycle': ['error', { maxDepth: 1 }],
    'import/no-dynamic-require': ['off'],
    'import/no-extraneous-dependencies': ['error', { devDependencies: ['**/*.test.tsx', 'src/setupTests.ts'] }],
    'import/prefer-default-export': ['off'],
    'jsx-a11y/label-has-associated-control': [
      'error',
      {
        required: {
          some: ['nesting', 'id'],
        },
      },
    ],
    'jsx-a11y/mouse-events-have-key-events': ['off'],
    'newline-before-return': 'error',
    'no-shadow': ['off'],
    'no-unused-vars': ['off'],
    'no-use-before-define': ['off'],
    'padding-line-between-statements': [
      'error',
      {
        blankLine: 'always',
        prev: ['const', 'let', 'var'],
        next: '*',
      },
      {
        blankLine: 'always',
        prev: '*',
        next: ['const', 'let', 'var'],
      },
      {
        blankLine: 'any',
        prev: ['const', 'let', 'var'],
        next: ['const', 'let', 'var'],
      },
      {
        blankLine: 'always',
        prev: '*',
        next: ['if', 'while', 'for'],
      },
      {
        blankLine: 'always',
        prev: ['if', 'while', 'for'],
        next: '*',
      },
    ],
    'react-hooks/exhaustive-deps': 'warn',
    'react-hooks/rules-of-hooks': 'error',
    'react/jsx-curly-newline': ['off'],
    'react/jsx-filename-extension': ['warn', { extensions: ['.ts', '.tsx'] }],
    'react/jsx-props-no-spreading': ['off'],
    'react/jsx-wrap-multilines': ['off'],
    'react/prop-types': ['off'],
    'react/sort-comp': ['off'],
    'react/state-in-constructor': ['off'],
    'react/static-property-placement': ['off'],
  },
  settings: {
    react: {
      version: 'detect',
      pragma: 'React',
    },
    'import/resolver': {
      node: {
        extensions: ['.js', '.jsx', '.ts', '.tsx', '.json'],
        moduleDirectory: ['node_modules', 'src/'],
      },
    },
  },
};
